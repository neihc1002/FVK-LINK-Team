/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Entity.Producer;
import Entity.Product;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.Serializable;
import java.sql.Array;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javazoom.jl.player.Player;
import model.DataProcess;

/**
 *
 * @author duong
 */
public class MainGUI extends javax.swing.JFrame implements Serializable{

    /**
     * Creates new form MainGUI
     */
    DataProcess dt =new DataProcess();
    private CardLayout cardContent=null;
    private CardLayout cardLeft=null;
    private boolean flag=true;
    private String pathimg;
    private int index;
    private boolean imgFlag=false;
    private Player player;
    public MainGUI() {
        initComponents();
        clock();
        System.setProperty("file.encoding", "UTF-8");
        txtaFunction.setEditable(false);
        cardContent=(CardLayout) pnContent.getLayout();
        cardLeft=(CardLayout) pnLeft.getLayout();
        cardContent.addLayoutComponent(pnMain, "pnMain");
        cardContent.addLayoutComponent(pnManage, "pnManage");
        cardLeft.addLayoutComponent(pnLeft1, "pnLeft1");
        cardLeft.addLayoutComponent(pnLeft2, "pnLeft2");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngSearch = new javax.swing.ButtonGroup();
        pnLeft = new javax.swing.JPanel();
        pnLeft1 = new javax.swing.JPanel();
        pnLeft2 = new javax.swing.JPanel();
        imgLeft = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtinfo = new javax.swing.JTextPane();
        btnBack = new javax.swing.JButton();
        btnchangeimg = new javax.swing.JButton();
        btnresetimg = new javax.swing.JButton();
        pnContent = new javax.swing.JPanel();
        pnMain = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtaFunction = new javax.swing.JTextPane();
        label11 = new javax.swing.JLabel();
        btnManage = new javax.swing.JButton();
        btnOutput = new javax.swing.JButton();
        btnCustomer = new javax.swing.JButton();
        btnManage3 = new javax.swing.JButton();
        btnInput = new javax.swing.JButton();
        pnManage = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        cbMemory = new javax.swing.JComboBox<>();
        txtname = new javax.swing.JTextField();
        cbmoney = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbGua = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cbProducer = new javax.swing.JComboBox<>();
        txtProducer = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtPriceout = new javax.swing.JTextField();
        btnedit = new javax.swing.JButton();
        txtPricein = new javax.swing.JTextField();
        rbId = new javax.swing.JRadioButton();
        rbName = new javax.swing.JRadioButton();
        rbProducer = new javax.swing.JRadioButton();
        pnInput = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProduct1 = new javax.swing.JTable();
        btnSearch1 = new javax.swing.JButton();
        txtSearch1 = new javax.swing.JTextField();
        rbbyId1 = new javax.swing.JRadioButton();
        rbbyName1 = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtName3 = new javax.swing.JTextField();
        txtPriceIn3 = new javax.swing.JTextField();
        txtProducer3 = new javax.swing.JTextField();
        txtPriceOut3 = new javax.swing.JTextField();
        txtInfor3 = new javax.swing.JTextField();
        cbMemory3 = new javax.swing.JComboBox<>();
        cbType3 = new javax.swing.JComboBox<>();
        btnSelectImage3 = new javax.swing.JButton();
        btnAddNew1 = new javax.swing.JButton();
        cbGua3 = new javax.swing.JComboBox<>();
        txtquantity3 = new javax.swing.JTextField();
        cbmoney3 = new javax.swing.JComboBox<>();
        lbLoadImg1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        userdp = new javax.swing.JLabel();
        clock = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnPlay = new javax.swing.JButton();
        txtMusicname = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FVK LINK Team");
        setLocationByPlatform(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        pnLeft.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout pnLeft1Layout = new javax.swing.GroupLayout(pnLeft1);
        pnLeft1.setLayout(pnLeft1Layout);
        pnLeft1Layout.setHorizontalGroup(
            pnLeft1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );
        pnLeft1Layout.setVerticalGroup(
            pnLeft1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 708, Short.MAX_VALUE)
        );

        pnLeft.add(pnLeft1, "card2");

        imgLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defaut.png"))); // NOI18N
        imgLeft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtinfo.setEditable(false);
        jScrollPane2.setViewportView(txtinfo);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back1.png"))); // NOI18N
        btnBack.setBorder(null);
        btnBack.setContentAreaFilled(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBackMousePressed(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnchangeimg.setText("Change Image");
        btnchangeimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchangeimgActionPerformed(evt);
            }
        });

        btnresetimg.setText("Reset");
        btnresetimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetimgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnLeft2Layout = new javax.swing.GroupLayout(pnLeft2);
        pnLeft2.setLayout(pnLeft2Layout);
        pnLeft2Layout.setHorizontalGroup(
            pnLeft2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(pnLeft2Layout.createSequentialGroup()
                .addGroup(pnLeft2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnLeft2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnLeft2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(imgLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnLeft2Layout.createSequentialGroup()
                                .addComponent(btnchangeimg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnresetimg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnLeft2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnLeft2Layout.setVerticalGroup(
            pnLeft2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLeft2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(imgLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnLeft2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnchangeimg)
                    .addComponent(btnresetimg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnLeft.add(pnLeft2, "card3");

        pnContent.setLayout(new java.awt.CardLayout());

        pnMain.setBackground(new java.awt.Color(191, 233, 255));

        txtaFunction.setBorder(null);
        txtaFunction.setFont(new java.awt.Font("Digital-7", 0, 18)); // NOI18N

        label11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/function.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label11, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txtaFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(117, Short.MAX_VALUE)
                    .addComponent(txtaFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(126, Short.MAX_VALUE)))
        );

        btnManage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanli1.png"))); // NOI18N
        btnManage.setBorder(null);
        btnManage.setContentAreaFilled(false);
        btnManage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnManage.setDefaultCapable(false);
        btnManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnManageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnManageMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnManageMousePressed(evt);
            }
        });
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        btnOutput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xuat-hang1.png"))); // NOI18N
        btnOutput.setBorder(null);
        btnOutput.setContentAreaFilled(false);
        btnOutput.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOutput.setDefaultCapable(false);
        btnOutput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnOutputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnOutputMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnOutputMousePressed(evt);
            }
        });
        btnOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputActionPerformed(evt);
            }
        });

        btnCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/khachhang1.png"))); // NOI18N
        btnCustomer.setBorder(null);
        btnCustomer.setContentAreaFilled(false);
        btnCustomer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCustomer.setDefaultCapable(false);
        btnCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCustomerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCustomerMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCustomerMousePressed(evt);
            }
        });
        btnCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerActionPerformed(evt);
            }
        });

        btnManage3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/3_1.png"))); // NOI18N
        btnManage3.setBorder(null);
        btnManage3.setContentAreaFilled(false);
        btnManage3.setDefaultCapable(false);
        btnManage3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManage3ActionPerformed(evt);
            }
        });

        btnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhaphang1.png"))); // NOI18N
        btnInput.setBorder(null);
        btnInput.setContentAreaFilled(false);
        btnInput.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInput.setDefaultCapable(false);
        btnInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInputMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnInputMousePressed(evt);
            }
        });
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnMainLayout = new javax.swing.GroupLayout(pnMain);
        pnMain.setLayout(pnMainLayout);
        pnMainLayout.setHorizontalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnMainLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnManage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnMainLayout.createSequentialGroup()
                        .addComponent(btnManage3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248))
                    .addGroup(pnMainLayout.createSequentialGroup()
                        .addComponent(btnInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(btnOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnMainLayout.setVerticalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnManage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCustomer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManage3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnContent.add(pnMain, "card2");

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Producer", "Quantity", "Price In", "Price Out", "Memory", "Guarantee", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblProduct.getTableHeader().setResizingAllowed(false);
        tblProduct.getTableHeader().setReorderingAllowed(false);
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);
        if (tblProduct.getColumnModel().getColumnCount() > 0) {
            tblProduct.getColumnModel().getColumn(0).setResizable(false);
            tblProduct.getColumnModel().getColumn(1).setResizable(false);
            tblProduct.getColumnModel().getColumn(2).setResizable(false);
            tblProduct.getColumnModel().getColumn(3).setResizable(false);
            tblProduct.getColumnModel().getColumn(4).setResizable(false);
            tblProduct.getColumnModel().getColumn(5).setResizable(false);
            tblProduct.getColumnModel().getColumn(6).setResizable(false);
            tblProduct.getColumnModel().getColumn(7).setResizable(false);
            tblProduct.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        cbMemory.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbMemory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4 GB", "8 GB", "16 GB", "32 GB", "64 GB", "128 GB", "256 GB" }));
        cbMemory.setInheritsPopupMenu(true);
        cbMemory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMemoryActionPerformed(evt);
            }
        });

        txtname.setInheritsPopupMenu(true);

        cbmoney.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbmoney.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VND", "USD", "EUR", "BTC", "JPY" }));
        cbmoney.setInheritsPopupMenu(true);

        jLabel3.setText("Name");

        jLabel4.setText("Producer");

        jLabel5.setText("Price In");

        jLabel6.setText("Price Out");

        jLabel7.setText("Memory");

        cbGua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbGua.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Month", "3 Month", "6 Month", "12 Month", "24 Month" }));
        cbGua.setAlignmentX(1.0F);
        cbGua.setInheritsPopupMenu(true);

        jLabel8.setText("Guarantee");

        cbProducer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbProducer.setAlignmentX(1.0F);
        cbProducer.setInheritsPopupMenu(true);
        cbProducer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProducerActionPerformed(evt);
            }
        });

        txtProducer.setEditable(false);
        txtProducer.setInheritsPopupMenu(true);
        txtProducer.setMinimumSize(new java.awt.Dimension(0, 0));
        txtProducer.setPreferredSize(new java.awt.Dimension(0, 0));
        txtProducer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProducerKeyReleased(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 1)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deletecus1.png"))); // NOI18N
        btnDelete.setBorder(null);
        btnDelete.setContentAreaFilled(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtPriceout.setInheritsPopupMenu(true);
        txtPriceout.setMinimumSize(new java.awt.Dimension(0, 0));
        txtPriceout.setPreferredSize(new java.awt.Dimension(0, 0));
        txtPriceout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceoutKeyReleased(evt);
            }
        });

        btnedit.setFont(new java.awt.Font("Tahoma", 0, 1)); // NOI18N
        btnedit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editcus1.png"))); // NOI18N
        btnedit.setBorder(null);
        btnedit.setContentAreaFilled(false);
        btnedit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnedit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btneditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btneditMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btneditMousePressed(evt);
            }
        });
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btngSearch.add(rbId);
        rbId.setText("by ID");

        btngSearch.add(rbName);
        rbName.setText("by Name");

        btngSearch.add(rbProducer);
        rbProducer.setText("by Producer");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbId)
                .addGap(41, 41, 41)
                .addComponent(rbName)
                .addGap(32, 32, 32)
                .addComponent(rbProducer)
                .addGap(18, 18, 18))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnedit)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                                .addGap(45, 45, 45))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtname)
                            .addComponent(cbMemory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbGua, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbmoney, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPricein, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPriceout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(67, 67, 67))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnSearch)
                        .addGap(19, 19, 19)
                        .addComponent(txtSearch)
                        .addGap(8, 8, 8))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbId)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbName)
                            .addComponent(rbProducer))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbProducer, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtProducer, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPricein, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(4, 4, 4)
                .addComponent(cbmoney)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPriceout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbMemory, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbGua, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout pnManageLayout = new javax.swing.GroupLayout(pnManage);
        pnManage.setLayout(pnManageLayout);
        pnManageLayout.setHorizontalGroup(
            pnManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnManageLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnManageLayout.setVerticalGroup(
            pnManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnContent.add(pnManage, "card3");

        pnInput.setBackground(new java.awt.Color(191, 233, 255));
        pnInput.setLayout(new java.awt.CardLayout());

        jPanel9.setBackground(new java.awt.Color(191, 233, 255));

        tblProduct1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Memory", "Price In"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblProduct1.getTableHeader().setResizingAllowed(false);
        tblProduct1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblProduct1);

        btnSearch1.setText("SEARCH");

        rbbyId1.setBackground(new java.awt.Color(191, 233, 255));
        rbbyId1.setText("by ID");

        rbbyName1.setBackground(new java.awt.Color(191, 233, 255));
        rbbyName1.setText("by Name");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch1)
                    .addComponent(rbbyId1))
                .addGap(39, 39, 39)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbbyName1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch1)
                    .addComponent(btnSearch1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbbyId1)
                    .addComponent(rbbyName1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(191, 233, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addGap(0, 661, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnInput.add(jPanel8, "card3");

        jLabel19.setText("Name");

        jLabel20.setText("Producer");

        jLabel21.setText("Input price");

        jLabel22.setText("Type");

        jLabel23.setText("Memory");

        jLabel24.setText("Ouput price");

        jLabel25.setText("Quantity");

        jLabel26.setText("Guarantee");

        jLabel27.setText("Infor");

        txtProducer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProducer3ActionPerformed(evt);
            }
        });

        cbMemory3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbMemory3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4 GB", "8 GB", "16 GB", "32 GB", "64 GB", "128 GB", "256 GB" }));
        cbMemory3.setInheritsPopupMenu(true);
        cbMemory3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMemory3ActionPerformed(evt);
            }
        });

        cbType3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbType3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phone", "Accessories" }));
        cbType3.setAlignmentX(1.0F);
        cbType3.setInheritsPopupMenu(true);
        cbType3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbType3ItemStateChanged(evt);
            }
        });
        cbType3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cbType3MouseExited(evt);
            }
        });
        cbType3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbType3ActionPerformed(evt);
            }
        });

        btnSelectImage3.setText("Select Image");
        btnSelectImage3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectImage3ActionPerformed(evt);
            }
        });

        btnAddNew1.setFont(new java.awt.Font("Protos", 0, 18)); // NOI18N
        btnAddNew1.setText("Add to repository");
        btnAddNew1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAddNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNew1ActionPerformed(evt);
            }
        });

        cbGua3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbGua3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Month", "3 Month", "6 Month", "12 Month", "24 Month" }));
        cbGua3.setAlignmentX(1.0F);
        cbGua3.setInheritsPopupMenu(true);
        cbGua3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGua3ActionPerformed(evt);
            }
        });

        txtquantity3.setText("0");

        cbmoney3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbmoney3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VND", "USD", "EUR", "BTC", "JPY" }));
        cbmoney3.setInheritsPopupMenu(true);

        lbLoadImg1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(btnSelectImage3))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel20)))))
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLoadImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtName3)
                        .addComponent(cbType3, 0, 176, Short.MAX_VALUE))
                    .addComponent(txtProducer3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMemory3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(169, 169, 169)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24)
                    .addComponent(jLabel27))
                .addGap(47, 47, 47)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPriceOut3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtPriceIn3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(cbmoney3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbGua3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtquantity3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInfor3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNew1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(cbType3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPriceIn3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbmoney3))
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPriceOut3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(txtName3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProducer3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(cbGua3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMemory3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtquantity3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtInfor3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(btnAddNew1))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSelectImage3))
                    .addComponent(lbLoadImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pnInput.add(jPanel7, "card2");

        pnContent.add(pnInput, "card5");

        jLabel2.setText("Current User: ");

        clock.setFont(new java.awt.Font("Digital-7", 0, 25)); // NOI18N
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/next.png"))); // NOI18N
        btnNext.setBorder(null);
        btnNext.setContentAreaFilled(false);

        btnPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back.png"))); // NOI18N
        btnPrevious.setBorder(null);
        btnPrevious.setContentAreaFilled(false);

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/play.png"))); // NOI18N
        btnPlay.setBorder(null);
        btnPlay.setContentAreaFilled(false);
        btnPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPlayMouseReleased(evt);
            }
        });
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(userdp, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(449, 449, 449)
                .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtMusicname, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userdp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(clock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnPlay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMusicname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo.png"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/head.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(229, 229, 229)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(230, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );

        jPanel6.setBackground(new java.awt.Color(2, 41, 158));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1230, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 748, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(pnLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnContent, javax.swing.GroupLayout.PREFERRED_SIZE, 1001, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnContent, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        DefaultTableModel model = model(dt.getProduct());
        btngSearch.setSelected(rbName.getModel(), true);
        tblProduct.setModel(model);
        ArrayList<Producer> list = dt.getProducer();
        for(Producer p:list){
            cbProducer.addItem(p.getName());
        }
        cardContent.show(pnContent, "pnManage");
        cardLeft.show(pnLeft, "pnLeft2");
        
        txtPriceout.setEditable(false);
        txtProducer.setEditable(false);
        txtname.setEditable(false);
        cbGua.setEnabled(false);
        cbMemory.setEnabled(false);
        cbmoney.setEnabled(false);
        cbProducer.setEnabled(false);
        btnedit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnchangeimg.setEnabled(false);
        btnresetimg.setEnabled(false);
        txtProducer.setText("");
        
    }//GEN-LAST:event_btnManageActionPerformed

    private void btnOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOutputActionPerformed

    private void btnCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerActionPerformed

    }//GEN-LAST:event_btnCustomerActionPerformed

    private void btnManage3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManage3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnManage3ActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        cardContent.show(pnContent, "pnAddNew");
        cardLeft.show(pnLeft, "pnLeft3");
        
    }//GEN-LAST:event_btnInputActionPerformed

    private void btnManageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnManageMouseEntered
        txtaFunction.setText("\tProduct Manager\n\n-Choose what to do with our product.\n-This function shows your product in a list\n-This function change the product that has been stored or delete it completely");
        btnManage.setIcon(new ImageIcon("src/quanli3.png"));
    }//GEN-LAST:event_btnManageMouseEntered

    private void btnManageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnManageMouseExited
        btnManage.setIcon(new ImageIcon("src/quanli1.png"));
        txtaFunction.setText("");
    }//GEN-LAST:event_btnManageMouseExited

    private void btnManageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnManageMousePressed
        btnManage.setIcon(new ImageIcon("src/quanli2.png"));
    }//GEN-LAST:event_btnManageMousePressed

    private void btnCustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCustomerMouseEntered
        btnCustomer.setIcon(new ImageIcon("src/khachhang3.png"));
        txtaFunction.setText("\tCustomer manager\n\n- Save customer information after they buy our product.\n- Saved customer information will be reviewed for sales product\n- Saved customer information will be used as research for total income rating");
    }//GEN-LAST:event_btnCustomerMouseEntered

    private void btnCustomerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCustomerMouseExited
        btnCustomer.setIcon(new ImageIcon("src/khachhang1.png"));
        txtaFunction.setText("");
    }//GEN-LAST:event_btnCustomerMouseExited

    private void btnCustomerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCustomerMousePressed
        btnCustomer.setIcon(new ImageIcon("src/khachhang2.png"));
    }//GEN-LAST:event_btnCustomerMousePressed

    private void txtProducerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProducerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProducerKeyReleased

    private void cbMemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMemoryActionPerformed

    }//GEN-LAST:event_cbMemoryActionPerformed

    private void txtPriceoutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceoutKeyReleased
       String regex="[a-zA-Z ]";
        String regex1="[^\\p{L}\\d\\s_]";
        model(dt.getProduct());
        String num="0";
        Pattern p1 = Pattern.compile(regex);
        Pattern p2 = Pattern.compile(regex1);
        Matcher m1=p1.matcher(txtPriceout.getText());
        Matcher m2=p2.matcher(txtPriceout.getText());
        if(m1.find()||m2.find()){
            txtPriceout.setText(txtPriceout.getText().substring(0,txtPriceout.getText().length()-1));
        }
        else{
            if(txtPriceout.getText().length()==0){
                txtPriceout.setText("");
            }
            else{
                num=txtPriceout.getText();
                if(num.length()>15){
                    txtPriceout.setText("");
                    JOptionPane.showMessageDialog(this, "Maximum", "Notification", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_txtPriceoutKeyReleased

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        index = tblProduct.getSelectedRow();
        if(index>=0&&dt.getProduct().size()>0){
            Product pr=dt.getProduct().get(index);
            txtname.setText(pr.getName());
            txtProducer.setText(pr.getProducer());
            cbProducer.setSelectedItem(pr.getProducer());
            cbMemory.setSelectedItem(pr.getMemory());
            txtPricein.setText(pr.getPricein());
            txtPriceout.setText(pr.getPriceout());
            cbmoney.setSelectedItem(pr.getCoin());
            cbGua.setSelectedItem(pr.getGuarantee());
            txtinfo.setText(pr.getInfo());
            btnedit.setEnabled(true);
            txtPricein.setEditable(false);
            txtPriceout.setEditable(false);
            txtProducer.setEditable(false);
            txtname.setEditable(false);
            cbGua.setEnabled(false);
            cbMemory.setEnabled(false);
            cbmoney.setEnabled(false);
            cbProducer.setEnabled(false);
            btnDelete.setEnabled(true);
            btnchangeimg.setEnabled(false);
            txtinfo.setEditable(false);
            imgLeft.setIcon(new ImageIcon(pr.getImage()));
            flag=true;
            btnedit.setIcon(new ImageIcon("src/editcus1.png"));
        }
    }//GEN-LAST:event_tblProductMouseClicked

    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        btnBack.setIcon(new ImageIcon("src/back3.png"));
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        btnBack.setIcon(new ImageIcon("src/back1.png"));
    }//GEN-LAST:event_btnBackMouseExited

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        flag=true;
        btnedit.setIcon(new ImageIcon("src/editcus1.png"));
        btnBack.setIcon(new ImageIcon("src/back2.png"));
        cardContent.show(pnContent, "pnMain");
        cardLeft.show(pnLeft, "pnLeft1");
        btnchangeimg.setEnabled(false);
        btnresetimg.setEnabled(false);
        imgLeft.setIcon(new ImageIcon("src/defaut.png"));
        txtProducer.setText("");
        clear();
        ArrayList<Producer> list = dt.getProducer();
        imgLeft.setIcon(null);
        tblProduct.clearSelection();
        txtinfo.setText("");
        for(Producer p:list){
            cbProducer.removeItem(p.getName());
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMousePressed
        btnBack.setIcon(new ImageIcon("src/back2.png"));
    }//GEN-LAST:event_btnBackMousePressed

    private void btnInputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInputMouseEntered
        btnInput.setIcon(new ImageIcon("src/nhaphang3.png"));
         txtaFunction.setText("\tImport product\n\n- Create information for new product and stack-up on previous product.");
    }//GEN-LAST:event_btnInputMouseEntered

    private void btnInputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInputMouseExited
       btnInput.setIcon(new ImageIcon("src/nhaphang1.png"));
       txtaFunction.setText("");
    }//GEN-LAST:event_btnInputMouseExited

    private void btnInputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInputMousePressed
        btnInput.setIcon(new ImageIcon("src/nhaphang2.png"));
    }//GEN-LAST:event_btnInputMousePressed

    private void btneditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btneditMouseEntered
        if(btnedit.isEnabled()){
        btnedit.setIcon(new ImageIcon("src/editcus2.png"));
        if(!flag){
            btnedit.setIcon(new ImageIcon("src/savecus2.png"));
        }
        else if(flag){
            btnedit.setIcon(new ImageIcon("src/editcus2.png"));
        }
        }
    }//GEN-LAST:event_btneditMouseEntered

    private void btneditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btneditMouseExited
        if(btnedit.isEnabled()){
        btnedit.setIcon(new ImageIcon("src/editcus1.png"));
        if(!flag)
            btnedit.setIcon(new ImageIcon("src/savecus1.png"));
        else if(flag){
            btnedit.setIcon(new ImageIcon("src/editcus1.png"));
        }
        }
    }//GEN-LAST:event_btneditMouseExited

    private void btneditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btneditMousePressed
        if(btnedit.isEnabled()){
        btnedit.setIcon(new ImageIcon("src/editcus3.png"));
        if(!flag)
            btnedit.setIcon(new ImageIcon("src/savecus3.png"));
        else if(flag){
            btnedit.setIcon(new ImageIcon("src/editcus3.png"));
        }
        }
    }//GEN-LAST:event_btneditMousePressed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        if(flag){
        btnedit.setIcon(new ImageIcon("src/savecus1.png"));
        txtPriceout.setEditable(true);
        txtinfo.setEditable(true);
        txtname.setEditable(true);
        cbGua.setEnabled(true);
        cbMemory.setEnabled(true);
        cbProducer.setEnabled(true);
        cbmoney.setEnabled(true);
        btnchangeimg.setEnabled(true);
        txtinfo.setEditable(true);
        txtPricein.setEditable(true);
        flag=false;
        }
        else if(!flag){
            String image;
            if(imgFlag){
                image=pathimg;
            }
            else{
                image=imgOut();
            }
            String name=txtname.getText();
            String id=dt.getProduct().get(index).getId();
            String pricein=txtPricein.getText();
            String priceout=txtPriceout.getText();
            String memory=(String) cbMemory.getSelectedItem();
            String coin=(String) cbmoney.getSelectedItem();
            String guarantee=(String) cbGua.getSelectedItem();
            String producer=(String) cbProducer.getSelectedItem();
            String info=txtinfo.getText();
            JPasswordField pwf = new JPasswordField(10);
            Object[] obj = {"Please enter the password:\n\n", pwf};
            Object stringArray[] = {"OK","Cancel"};
            if (JOptionPane.showOptionDialog(null, obj, "Need password",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, stringArray, obj) == JOptionPane.YES_OPTION){
            String pass = String.valueOf(pwf.getPassword());
            if(pass.equalsIgnoreCase("admin")){
                try {
                    if(dt.save(id, name, producer, pricein, priceout, memory, guarantee, coin,image, info)){
                        File file=new File(imgOut());
                        if(file.exists()){
                            if(file.delete()){
                            model(dt.getProduct());
                            imgFlag=false; 
                            JOptionPane.showMessageDialog(this, "Update success", "Notification", JOptionPane.PLAIN_MESSAGE);
                            }
                        }
                    }
                    else   
                        JOptionPane.showMessageDialog(this, "Error", "Notification", JOptionPane.ERROR_MESSAGE);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
        }else
            JOptionPane.showMessageDialog(this, "You entered an incorrect password!", "Notification", JOptionPane.ERROR_MESSAGE); 
        }
        }   
        
    }//GEN-LAST:event_btneditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        btnDelete.setIcon(new ImageIcon("src/deletecus1.png"));
        if(dt.getProduct().size()!=0&&tblProduct.getSelectedRow()>=0){
        String id=dt.getProduct().get(tblProduct.getSelectedRow()).getId();
        JPasswordField pwf = new JPasswordField(10);
        Object[] obj = {"Please enter the password:\n\n", pwf};
        Object stringArray[] = {"OK","Cancel"};
        if (JOptionPane.showOptionDialog(null, obj, "Need password",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, stringArray, obj) == JOptionPane.YES_OPTION){
        String pass = String.valueOf(pwf.getPassword());
        if(pass.equalsIgnoreCase("admin")){
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure?","Notification", JOptionPane.YES_NO_OPTION);
        if(reply == JOptionPane.YES_OPTION){
            if(dt.deleteIteam(id))
                {
                    if(dt.getProduct().size()!=0){
                        model(dt.getProduct());
                        JOptionPane.showMessageDialog(this, "Delete success!");
                    }
                    else{
                        model(dt.getProduct()).removeRow(0);
                        imgLeft.setIcon(new ImageIcon("src/defaut.png"));
                        txtinfo.setText("");
                        clear();
                    }    
                }
            else
                JOptionPane.showMessageDialog(this, "Error", "Notification", JOptionPane.ERROR_MESSAGE);
        }
        }
        else
            JOptionPane.showMessageDialog(this, "You entered an incorrect password!", "Notification", JOptionPane.ERROR_MESSAGE); 
        }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        btnDelete.setIcon(new ImageIcon("src/deletecus2.png"));
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        btnDelete.setIcon(new ImageIcon("src/deletecus1.png"));
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnchangeimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchangeimgActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & PNG Images", "jpg", "png");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileFilter(filter);
        int choose = fileChooser.showOpenDialog(null);
        if (choose == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          imgLeft.setIcon(new ImageIcon(selectedFile.getPath()));
          pathimg=selectedFile.getPath();
          imgFlag=true;
          btnresetimg.setEnabled(true);
          String pathname="src/"+dt.getProduct().get(index).getId()+".png";
          File file=new File(pathname);
            try {
                FileOutputStream fos = new FileOutputStream(file);
              try {
                  fos.write(dt.getProduct().get(index).getImage());
                  fos.close();
              } catch (IOException ex) {
                  Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
              }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
          
        }
    }//GEN-LAST:event_btnchangeimgActionPerformed

    private void btnresetimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetimgActionPerformed
        File file = new File(imgOut());
        if(file.delete()){
            imgFlag=false;
            imgLeft.setIcon(new ImageIcon(dt.getProduct().get(index).getImage()));
            btnresetimg.setEnabled(false);
        }
            
    }//GEN-LAST:event_btnresetimgActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
       DefaultTableModel model;
       if(btngSearch.isSelected(rbName.getModel())){
           model= model(searchById(txtSearch.getText()));
           tblProduct.setModel(model);
       }
       else if(btngSearch.isSelected(rbProducer.getModel())){
           model= model(searchByProducer(txtSearch.getText()));
           tblProduct.setModel(model);
       }
       else {
           model= model(dt.getProduct());
           tblProduct.setModel(model);
       }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbProducerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProducerActionPerformed
        txtProducer.setText((String) cbProducer.getSelectedItem());
    }//GEN-LAST:event_cbProducerActionPerformed

    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
        btnDelete.setIcon(new ImageIcon("src/deletecus3.png"));
    }//GEN-LAST:event_btnDeleteMousePressed

    private void btnOutputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOutputMouseEntered
       btnOutput.setIcon(new ImageIcon("src/xuat-hang3.png"));
       txtaFunction.setText("\tSell product\n\n- Export from storage what the customer want, receive money from customer and add it to the casher. Print out the bill and give it to the customer.\nwant, receive money from customer and add it to the casher. Print out the bill and give it to the customer.");
       
    }//GEN-LAST:event_btnOutputMouseEntered

    private void btnOutputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOutputMouseExited
        btnOutput.setIcon(new ImageIcon("src/xuat-hang1.png"));
        txtaFunction.setText("");
        
    }//GEN-LAST:event_btnOutputMouseExited

    private void btnOutputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOutputMousePressed
        btnOutput.setIcon(new ImageIcon("src/xuat-hang2.png"));
       
    }//GEN-LAST:event_btnOutputMousePressed
    private  boolean f=true;
    private void btnPlayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayMouseReleased
        if(f){
        btnPlay.setIcon(new ImageIcon("src/pause.png"));
        play(new File("src\\Music\\Moving On - Marshmello.mp3"));
        txtMusicname.setText("Moving On - Marshmello");
        f=false;
        }
        else{
            stop();
            btnPlay.setIcon(new ImageIcon("src/play.png"));
            txtMusicname.setText("");
            f=true;
        }
    }//GEN-LAST:event_btnPlayMouseReleased

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPlayActionPerformed

    private void txtProducer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProducer3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProducer3ActionPerformed

    private void cbMemory3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMemory3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMemory3ActionPerformed

    private void cbType3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbType3ItemStateChanged
        // TODO add your handling code here:
        if(cbType2.getSelectedItem().toString().equals("Accessories"))
        {
            cbMemory2.setEnabled(false);

        }
        if(cbType2.getSelectedItem().toString().equals("Phone"))
        {
            cbMemory2.setEnabled(true);
        }
    }//GEN-LAST:event_cbType3ItemStateChanged

    private void cbType3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbType3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cbType3MouseExited

    private void cbType3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbType3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbType3ActionPerformed

    private void btnSelectImage3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectImage3ActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & PNG Images", "jpg", "png");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileFilter(filter);
        int choose = fileChooser.showOpenDialog(null);
        if (choose == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            pathimg=selectedFile.getPath();
            imgFlag=true;
            //          String pathname="src/"+dt.getProduct().get(index).getId()+".png";
            //          File file=new File(pathname);
            //            try {
                //                FileOutputStream fos = new FileOutputStream(file);
                //              try {
                    //                  fos.write(dt.getProduct().get(index).getImage());
                    //                  fos.close();
                    //              } catch (IOException ex) {
                    //                  Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    //              }
                //            } catch (FileNotFoundException ex) {
                //                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                //            }
            lbLoadImg.setIcon(new ImageIcon(selectedFile.getPath()));

        }
    }//GEN-LAST:event_btnSelectImage3ActionPerformed

    private void btnAddNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNew1ActionPerformed
        // TODO add your handling code here:
        if(checkError())
        {
            String id = null;
            String name = txtName2.getText();
            String producer = txtProducer2.getText();
            String coin =(String) cbmoney2.getSelectedItem();
            String priceIn = txtPriceIn2.getText();
            String priceOut = txtPriceOut2.getText();
            String guarantee=(String) cbGua2.getSelectedItem();
            String info=txtInfor2.getText();
            String memory=(String) cbMemory2.getSelectedItem();
            String quantity = txtquantity2.getText();
            String image;
            String type = (String) cbType2.getSelectedItem();
            if(imgFlag){
                image=pathimg;
            }
            else{
                image=imgOut();
            }
            if(cbType2.getSelectedIndex()==0||cbType2.getSelectedIndex()==1){
                int idl=dt.getProduct().size()+1;
                id="PD"+idl;
                ArrayList<Product> list=dt.getProduct();
                for (int i = 0; i < list.size(); i++) {
                    Product pr = list.get(i);
                    if(pr.getId().equalsIgnoreCase(id)){
                        idl=idl+1;
                        id="PD"+idl;
                    }

                }

            }
            try {
                if(dt.addProduct(id, name, producer, type, memory, priceIn, priceOut, quantity, guarantee, coin, info, image))
                {
                    JOptionPane.showMessageDialog(this, "Add new success!", "Notification", JOptionPane.PLAIN_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Add new fail!", "Notification", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddNew1ActionPerformed

    private void cbGua3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGua3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGua3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew1;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCustomer;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnManage;
    private javax.swing.JButton btnManage3;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOutput;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnSelectImage3;
    private javax.swing.JButton btnchangeimg;
    private javax.swing.JButton btnedit;
    private javax.swing.ButtonGroup btngSearch;
    private javax.swing.JButton btnresetimg;
    private javax.swing.JComboBox<String> cbGua;
    private javax.swing.JComboBox<String> cbGua3;
    private javax.swing.JComboBox<String> cbMemory;
    private javax.swing.JComboBox<String> cbMemory3;
    private javax.swing.JComboBox<String> cbProducer;
    private javax.swing.JComboBox<String> cbType3;
    private javax.swing.JComboBox<String> cbmoney;
    private javax.swing.JComboBox<String> cbmoney3;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel imgLeft;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel lbLoadImg1;
    private javax.swing.JPanel pnContent;
    private javax.swing.JPanel pnInput;
    private javax.swing.JPanel pnLeft;
    private javax.swing.JPanel pnLeft1;
    private javax.swing.JPanel pnLeft2;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnManage;
    private javax.swing.JRadioButton rbId;
    private javax.swing.JRadioButton rbName;
    private javax.swing.JRadioButton rbProducer;
    private javax.swing.JRadioButton rbbyId1;
    private javax.swing.JRadioButton rbbyName1;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTable tblProduct1;
    private javax.swing.JTextField txtInfor3;
    private javax.swing.JLabel txtMusicname;
    private javax.swing.JTextField txtName3;
    private javax.swing.JTextField txtPriceIn3;
    private javax.swing.JTextField txtPriceOut3;
    private javax.swing.JTextField txtPricein;
    private javax.swing.JTextField txtPriceout;
    private javax.swing.JTextField txtProducer;
    private javax.swing.JTextField txtProducer3;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearch1;
    private javax.swing.JTextPane txtaFunction;
    private javax.swing.JTextPane txtinfo;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtquantity3;
    private javax.swing.JLabel userdp;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel model(ArrayList<Product> list) {
            DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
            if(list.size()>0){
            model.getDataVector().clear();
            for(Product p:list){
                Vector v =new Vector();
                v.add(p.getId());
                v.add(p.getName());
                v.add(p.getProducer());
                v.add(String.valueOf(p.getQuantity()));
                v.add(p.getPricein());
                v.add(p.getPriceout());
                v.add(String.valueOf(p.getMemory()));
                v.add(String.valueOf(p.getGuarantee()));
                v.add(p.getType());
                model.addRow(v);
            }
            }
        return model;
    }
    private void sizetblProductRow(){
        TableColumnModel table=tblProduct.getColumnModel();
            table.getColumn(0).setPreferredWidth(15);
            table.getColumn(3).setPreferredWidth(40);
            table.getColumn(6).setPreferredWidth(45);
            table.getColumn(8).setPreferredWidth(30);
            table.getColumn(7).setPreferredWidth(50);
            table.getColumn(2).setPreferredWidth(50);
    }

    private void clear() {
        txtProducer.setText("");
        txtname.setText("");
        txtPriceout.setText("");
        txtSearch.setText("");
        cbMemory.setSelectedIndex(0);
        cbGua.setSelectedIndex(0);
        txtPricein.setText("");
    }
    private String imgOut(){
        String pathname = null;
        if(index>=0){
            pathname="src/"+dt.getProduct().get(index).getId()+".png";
            File file=new File(pathname);
            try {
                FileOutputStream fos = new FileOutputStream(file);
              try {
                  fos.write(dt.getProduct().get(index).getImage());
                  fos.flush();
                  fos.close();
              } catch (IOException ex) {
                  Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
              }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return pathname;
    }
    private void clock(){
        javax.swing.Timer t = new javax.swing.Timer(1000,new ActionListener() {
                  public void actionPerformed(ActionEvent e) {
                      Calendar now = Calendar.getInstance();
                      int h = now.get(Calendar.HOUR_OF_DAY);
                      int m = now.get(Calendar.MINUTE);
                      int s = now.get(Calendar.SECOND);
                      clock.setText("" + h + ":" + m + ":" + s);
                  }
              });
        t.start();
    }
    public ArrayList<Product> searchById(String name){
        ArrayList<Product> pr=dt.getProduct();
        ArrayList<Product> list=new ArrayList<>();
        if(pr.size()>=0){
        for (int i = 0; i < pr.size(); i++) {
            if(pr.get(i).getName().toLowerCase().contains(name.toLowerCase())){
                list.add(pr.get(i));
            }
        }
        }
        return list;
    }
    public ArrayList<Product> searchByProducer(String producer){
        ArrayList<Product> pr=dt.getProduct();
        ArrayList<Product> list=new ArrayList<>();
        if(pr.size()>=0){
        for (int i = 0; i < pr.size(); i++) {
            if(pr.get(i).getProducer().toLowerCase().contains(producer.toLowerCase())){
                list.add(pr.get(i));
            }
        }
        }
        return list;
    }
    public void play(File name) {
        try {
            BufferedInputStream bis = new BufferedInputStream(new FileInputStream(name));
            player = new Player(bis);
        } catch (Exception ex) {
            System.out.println(ex);
        }
        
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    player.play();
                } catch (Exception ex) {
                    System.out.println(ex);
                }
            }
        }).start();
    }
    public void stop() {
        if (player != null)
            player.close();
    }
    private boolean checkError() {
        String name = txtName2.getText();
        String producer = txtProducer2.getText();
        String inputprice = txtPriceIn2.getText();
        String outputprice = txtPriceOut2.getText();
        int quantity = Integer.parseInt(txtquantity2.getText());
        if(quantity <=0){
            JOptionPane.showMessageDialog(this, "Quantity is not valid!", "Notification", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        else {
            if(name.length()==0){
            JOptionPane.showMessageDialog(this, "Name can not blank!", "Notification", JOptionPane.ERROR_MESSAGE);
            return false;
            }
            else {
                    if(producer.length()==0){
                        JOptionPane.showMessageDialog(this, "Producer can not blank!", "Notification", JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                    else {
                        if(inputprice.length()==0) {
                        JOptionPane.showMessageDialog(this, "Input price can not blank!", "Notification", JOptionPane.ERROR_MESSAGE);
                        return false;
                        }
                        else {
                            if(outputprice.length()==0){
                            JOptionPane.showMessageDialog(this, "Output price can not blank!", "Notification", JOptionPane.ERROR_MESSAGE);
                            return false;
                            }
                            else {
                                Double pricein = Double.parseDouble(txtPriceIn2.getText());
                                Double priceout = Double.parseDouble(txtPriceOut2.getText());
                                if(pricein >= priceout) {
                                    JOptionPane.showMessageDialog(this, "Output price must be bigger input price", "Notification", JOptionPane.ERROR_MESSAGE);
                                    return false;
                                }
                            }
                        }
                    }
                 
            }
            }
        return true;
    }
}


